#include <Adafruit_NeoPixel.h>
#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include "RGB.h"

#define PIN 1

Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(8, 8, PIN,
  NEO_MATRIX_TOP     + NEO_MATRIX_LEFT +
  NEO_MATRIX_ROWS + NEO_MATRIX_PROGRESSIVE,
  NEO_GRB            + NEO_KHZ800);


void setup() {
  matrix.begin();
  matrix.setBrightness(20);
  matrix.setTextColor( matrix.Color(white.r, white.g, white.b) );
  matrix.setTextWrap(false);
  
}

void loop() {
  back(5);
  delay(2000);
  jump();
  walk(15);
}

// Fill the dots one after the other with a color
void colorWipe(RGB color, uint8_t wait) {
  for(uint16_t row=0; row < 8; row++) {
    for(uint16_t column=0; column < 8; column++) {
      matrix.drawPixel(column, row, matrix.Color(color.r, color.g, color.b));
      matrix.show();
      delay(wait);
    }
  }
}

void drawFast(byte pic[8][8][3]) {
  for(int row = 0; row < 8; row++) {
    for(int column = 0; column < 8; column++) {
      matrix.drawPixel(column, row, matrix.Color(pic[column][row][0], pic[column][row][1], pic[column][row][2]));
      matrix.show();
    }
  }
}

void walk(int dist) {
  byte walk1[8][8][3] = {
   {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {253, 139, 10}},
   {{253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}},
   {{253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {253, 139, 10}, {255, 255, 255}},
   {{253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}},
   {{0, 0, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{253, 139, 10}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}}
  };
  byte walk2[8][8][3] = {
   {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {253, 139, 10}},
   {{253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}},
   {{253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {253, 139, 10}, {255, 255, 255}},
   {{253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}},
   {{0, 0, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}}
  };
  for (int it = 0; it < dist; it++) {
    drawFast(walk1);
    delay(50);
    drawFast(walk2);
    delay(50);
  }
}

void jump() {
  byte jump1[8][8][3] = {
   {{14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}},
   {{253, 139, 10}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {14, 10, 6}, {253, 139, 10}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{255, 255, 255}, {253, 139, 10}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {253, 139, 10}, {14, 10, 6}}
  };
  byte jump2[8][8][3] = {
   {{253, 139, 10}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {14, 10, 6}, {253, 139, 10}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{255, 255, 255}, {253, 139, 10}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {253, 139, 10}, {14, 10, 6}},
   {{14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}, {14, 10, 6}}
  };
   drawFast(jump1);
   delay(50);
   drawFast(jump2);
   delay(200);
   drawFast(jump1);
   delay(50);
}

void back(int dist) {
  byte back1[8][8][3] = {
   {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}},
   {{253, 139, 10}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{255, 255, 255}, {253, 139, 10}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}}
  };
  byte back2[8][8][3] = {
   {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}},
   {{253, 139, 10}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}, {0, 0, 0}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{255, 255, 255}, {253, 139, 10}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {253, 139, 10}},
   {{253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {253, 139, 10}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {107, 57, 0}, {253, 139, 10}, {0, 0, 0}},
   {{0, 0, 0}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {253, 139, 10}, {0, 0, 0}},
   {{253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}, {253, 139, 10}, {14, 10, 6}}
  };
  for (int it = 0; it < dist; it++) {
    drawFast(back1);
    delay(100);
    drawFast(back2);
    delay(100);
  }
}





